@using GroupTrip.Shared.Models
@page "/groupdetails/{id}"
@inject HttpClient Http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper

<h1>Group: @_group.Name</h1>

@if (_group == null)
{
  <p><em>Loading...</em></p>
}
else
{

  <table class='table'>
    <thead>
    <tr>
      <th></th>
      <th></th>
    </tr>
    </thead>
    <tbody>
    <tr>
      <td>Name</td>
      <td>@_group.Name</td>
    </tr>
    <tr>
      <td>Trip</td>
      <td>@_trip.Location</td>
    </tr>
    <tr>
      <td>Total Expense</td>
      <td>@_expense</td>
    </tr>
    <tr>
      <td>Members</td>
      @foreach (var person in _members)
          {
            <td>
              @person.FirstName @person.LastName
            </td>
            <td>
              To Pay: @(_expense/_members.Length)
            </td>
            <td>
              <a onclick="@(async () => await DeletePerson(person.Id))">Remove</a>
            </td>
          }
    </tr>
    </tbody>
  </table>
}

@functions {
  [Parameter]
  string id { get; set; }

  Group _group = new Group();
  Trip _trip = new Trip();
  Person[] _members = new Person[0];
  Payment[] _payments = new Payment[0];
  double _expense;

  protected override async Task OnInitAsync()
  {
    _group = await Http.GetJsonAsync<Group>("/api/Groups/Details/"+id);
    _trip = await Http.GetJsonAsync<Trip>("/api/Trips/Details/" + _group.TripId);
    _members = await Http.GetJsonAsync<Person[]>("/api/Groups/Members/" + _group.Id);
    _payments = await Http.GetJsonAsync<Payment[]>("/api/Groups/Payments/" + _group.Id);
    _expense = _payments.Select(p => p.Value).Sum();
  }

  async Task DeletePerson(int personId)
  {
    var url = "/api/Persons/Delete/" + id;
    await Http.DeleteAsync(url);
  }
}