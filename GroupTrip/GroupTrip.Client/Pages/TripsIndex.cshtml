@using GroupTrip.Shared.Models
@page "/tripsindex"
@inject HttpClient Http

<h1>All Trips</h1>

<p>
    <a href="/addtrip">Create New</a>
</p>

@if (_tripsList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table'>
        <thead>
        <tr>
            <th>Location</th>
            <th>Description</th>
            <th>Start Date</th>
            <th>End Date</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var trip in _tripsList)
        {
            <tr>
                <td>@trip.Location</td>
                <td>@trip.Description</td>
                <td>@trip.StartDate</td>
                <td>@trip.EndDate</td>
                <td>
                    <a href='/edittrip/@trip.Id'>Edit</a>  |
                    <a onclick="@(async () => await Delete(trip.Id))">Delete</a> |
                    <a href='/tripdetails/@trip.Id'>Details</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@functions {
    Trip[] _tripsList;

    protected override async Task OnInitAsync()
    {
        _tripsList = new Trip[0];
        _tripsList = await Http.GetJsonAsync<Trip[]>("/api/Trips/Index");
    }

    async Task Delete(int id)
    {
        var url = "/api/Trips/Delete/" + id;
        await Http.DeleteAsync(url);
        _tripsList = _tripsList.Where(val => val.Id != id).ToArray();
    }
}